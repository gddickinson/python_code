open_file()

subtract(100) #subtract baseline
ratio(1,500,'average'); #ratio(first_frame, nFrames, ratio_type), now we are in F/F0
#set_value(1,0,175) #remove the pre-laser baseline. This would otherwise disturb our filter
data_window=set_value(1,  1, 1) #remove the UV flash for the same reason
high_pass=butterworth_filter(1,.06,1,keepSourceWindow=True) # High pass filter 
low_pass=image_calculator(data_window,high_pass,'Subtract',keepSourceWindow=True) # we will use the low pass image as an approximation for the variance of the photon noise. 
low_pass.image[low_pass.image<1]=1 # We can't take the sqrt of a negative number
low_pass=power(.5) #convert from variance to standard deviation
high_pass.setAsCurrentWindow() 
norm_window=ratio(1,500,'standard deviation', keepSourceWindow=True) 
image_calculator(norm_window,low_pass,'Divide') #now the noise should be constant throughout the imaging field and over the duration of the movie
threshold(2.5) #this value is a multiple of standard deviations of the noise.  
binary_window=set_value(0, 9500, 10001) #our butterworth_filter gives us an artifact towards the end of the movie that we need to remove
g.m.puffAnalyzer=threshold_cluster(binary_window,data_window,high_pass) 