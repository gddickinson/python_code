# -*- coding: utf-8 -*-
"""
Created on Thu May 30 11:01:24 2019

@author: GEORGEDICKINSON
"""

import pandas as pd
from matplotlib import pyplot as plt
import numpy as np
import h5py
import os
import shutil

#picasso hdf5 format (without averaging): ['frame', 'x', 'y', 'photons', 'sx', 'sy', 'bg', 'lpx', 'lpy']
#Column Name       |	Description                                                                                                                      |	C Data Type
#frame	            |The frame in which the localization occurred, starting with zero for the first frame.	                                                |unsigned long
#x                |The subpixel x coordinate in camera pixels	                                                                                          |float
#y	              |The subpixel y coordinate in camera pixels	                                                                                          |float
#photons	       |The total number of detected photons from this event, not including background or camera offset	                                      |float
#sx	             |The Point Spread Function width in camera pixels                                                                                       |	float
#sy	             |The Point Spread Function height in camera pixels                                                                                      |	float
#bg	             |The number of background photons per pixel, not including the camera offset                                                            |	float
#lpx	         |The localization precision in x direction, in camera pixels, as estimated by the Cramer-Rao Lower Bound of the Maximum Likelihood fit.  |	float
#lpy	         |The localization precision in y direction, in camera pixels, as estimated by the Cramer-Rao Lower Bound of the Maximum Likelihood fit.  |	float


#set filepaths
filePath1 = r"C:\Users\georgedickinson\Desktop\matrix0\Matrix_00_combined_combined.hdf5"
filePath2 = r"C:\Users\georgedickinson\Desktop\matrix0\20190912_Matrix0_syn2_pure_Triangles_300msExp_Mid-9nt-3nM_MgCl2_18mM_PCA_12mM_PCD_TROLOX_1mM_10_43_40_fixed_locs_render_DRIFT_3_filter_picked.hdf5"

savePath = filePath1.split('.')[0] + '_combined.hdf5'

#info data in yaml
yamlPath = filePath1.split('.')[0] + '.yaml'
yamlSavePath = filePath1.split('.')[0] + '_combined.yaml'

#open picasso hdf5 file as DF
locs1 = pd.read_hdf(filePath1, '/locs')
locs2 = pd.read_hdf(filePath2, '/locs')

#check header
headers = locs1.dtypes.index
print(headers)
print(locs1.shape)
print(locs1.head(n=100))
print(locs1.tail(n=100))
print(locs2.tail(n=100))

#combine df with new group numbers
groupNumber = max(locs1['group']) + 1
locs2['group'] = locs2['group']+groupNumber
locs_ALL = pd.concat([locs1,locs2])

def saveHDF5(df, out_path):
    #from .io import save_locs   
    frames = df["frame"].astype(int)
    # make sure frames start at zero:
    x = df["x"]
    y = df["y"]
    photons = df["photons"].astype(int)    
    bg = df["bg"].astype(int)
    lpx = df["lpx"]
    lpy = df["lpy"]
    sx = df["sx"]
    sy= df["sy"]
    group = df["group"].astype(int)
    
    LOCS_DTYPE = [
        ("frame", "u4"),
        ("x", "f4"),
        ("y", "f4"),
        ("photons", "f4"),
        ("sx", "f4"),
        ("sy", "f4"),
        ("bg", "f4"),
        ("lpx", "f4"),
        ("lpy", "f4"),
        ("group", "i4"),
                    ]
    locs = np.rec.array((frames, x, y, photons, sx, sy, bg, lpx, lpy,group),dtype=LOCS_DTYPE,)

    locs.sort(kind="mergesort", order="frame")
    
    img_info = {}
    img_info["Generated by"] = "Picasso csv2hdf"
    img_info["Frames"] = int(np.max(frames)) + 1
    img_info["Height"] = int(np.ceil(np.max(y)))
    img_info["Width"] = int(np.ceil(np.max(x)))

    info = []
    info.append(img_info)

    #base, ext = os.path.splitext(path)
    #out_path = base + "_locs.hdf5"
    #save_locs(out_path, locs, info)
    
    with h5py.File(out_path, "w") as locs_file:
        locs_file.create_dataset("locs", data=locs)
    
    print("Saved to {}.".format(out_path))    
    return
       

def copy_rename(old_file_name, new_file_name):
    src_dir= os.curdir
    dst_dir= os.path.join(os.curdir , "subfolder")
    src_file = os.path.join(src_dir, old_file_name)
    shutil.copy(src_file,dst_dir)
    
    dst_file = os.path.join(dst_dir, old_file_name)
    new_dst_file_name = os.path.join(dst_dir, new_file_name)
    os.rename(dst_file, new_dst_file_name) 

#save hdf5 file    
saveHDF5(locs_ALL,savePath)    
    
#save yadl info file    
copy_rename(yamlPath,yamlSavePath)    